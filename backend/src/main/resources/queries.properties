# USER ENTITY
user.insert=INSERT INTO "user" (first_name, last_name, second_name, password, email, date_of_birth, phone_number, role) \
  VALUES (:firstName, :lastName, :secondName, :password, :email, :dateOfBirth, :phoneNumber, :role.id) \
  ON CONFLICT (email) DO UPDATE SET first_name = :firstName, last_name = :lastName, second_name = :secondName, \
  password = :password, email = :email, date_of_birth = :dateOfBirth, phone_number = :phoneNumber, role = :role.id;
user.findAll=SELECT u.id, u.first_name, u.last_name, u.second_name, u.password, u.email, u.date_of_birth, u.phone_number, \
  u.role, r.name FROM "user" u INNER JOIN role r ON u.role = r.id ORDER BY u.last_name, u.first_name LIMIT :limit OFFSET :offset;
user.findOne=SELECT u.id, u.first_name, u.last_name, u.second_name, u.password, u.email, u.date_of_birth, u.phone_number, \
  u.role, r.name FROM "user" u INNER JOIN role r ON u.role = r.id WHERE u.id = :id
user.delete=DELETE FROM "user" WHERE id = :id;
user.exists=SELECT COUNT(*) FROM "user" WHERE id = :id;
user.findByEmail=SELECT u.id, u.first_name, u.last_name, u.second_name, u.password, u.email, u.date_of_birth, u.phone_number, \
  u.role, r.name FROM "user" u INNER JOIN role r ON u.role = r.id WHERE u.email = :email;
user.findByRole=SELECT u.id, u.first_name, u.last_name, u.second_name, u.password, u.email, u.date_of_birth, u.phone_number, \
  u.role, r.name FROM "user" u INNER JOIN role r ON u.role = r.id WHERE u.role = :role ORDER BY u.last_name, u.first_name LIMIT :limit OFFSET :offset;
user.count = SELECT COUNT(1) FROM "user";
# REQUEST ENTITY
request.insert=INSERT INTO request (title, description, priority_status_id, progress_status_id, reporter_id, assignee_id, estimate_time_in_days, date_of_creation, parent_id) \
  VALUES (:title, :description, :priorityStatus.id, :progressStatus.id, :reporter.id, :assignee.id, :estimateTimeInDays, :dateOfCreation, :parentId) \
  ON CONFLICT (id) DO UPDATE SET title = :title, description = :description, priority_status_id = :priorityStatus.id, \
  progress_status_id = :progressStatus.id, reporter_id = :reporter.id, assignee_id = :assignee.id, \
  estimate_time_in_days = :estimateTimeInDays, date_of_creation = :dateOfCreation, parent_id = :parentId;
request.select=SELECT r.id, r.title, r.description, r.parent_id, r.estimate_time_in_days , r.date_of_creation, \
  priority.id priority_id, priority.name priority_name, progress.id progress_id, progress.name progress_name, \
  reporter.id reporter_id, reporter.first_name reporter_first_name, reporter.last_name reporter_last_name, \
  assignee.id assignee_id, assignee.first_name assignee_first_name, assignee.last_name assignee_last_name \
  FROM request r \
  LEFT JOIN priority_status priority ON r.priority_status_id = priority.id \
  LEFT JOIN progress_status progress ON r.progress_status_id = progress.id \
  LEFT JOIN "user" reporter ON r.reporter_id = reporter.id \
  LEFT JOIN "user" assignee ON r.assignee_id = assignee.id 
request.fetchPage=SELECT r.id, r.title, r.description, r.parent_id, r.estimate_time_in_days , r.date_of_creation, \
  priority.id priority_id, priority.name priority_name, progress.id progress_id, progress.name progress_name, \
  reporter.id reporter_id, reporter.first_name reporter_first_name, reporter.last_name reporter_last_name, \
  assignee.id assignee_id, assignee.first_name assignee_first_name, assignee.last_name assignee_last_name \
  FROM request r \
  LEFT JOIN priority_status priority ON r.priority_status_id = priority.id \
  LEFT JOIN progress_status progress ON r.progress_status_id = progress.id \
  LEFT JOIN "user" as reporter ON r.reporter_id = reporter.id \
  INNER JOIN "user" assignee ON r.assignee_id = assignee.id \
  WHERE r.parent_id IS NULL ORDER BY r.date_of_creation LIMIT :limit OFFSET :offset;
request.delete=DELETE FROM request WHERE id = :id;
request.exists=SELECT COUNT(*) FROM request WHERE id = :id;
request.findOne=\nWHERE r.id = :id;
request.findSubRequests=\nWHERE r.progress_status_id IS NULL AND r.priority_status_id IS NULL AND r.parent_id = :id ;
request.findJoinedRequests=\nWHERE progress.name = 'Joined' AND r.parent_id = :id;
request.findByAssignee=\nWHERE r.assignee_id = :assigneeId ORDER BY u.last_name, u.first_name LIMIT :limit OFFSET :offset;
request.findByReporter=\nWHERE r.reporter_id = :reporterId ORDER BY u.last_name, u.first_name LIMIT :limit OFFSET :offset;
request.findByPeriod=\nWHERE r.date_of_creation BETWEEN :begin AND :end ORDER BY u.last_name, u.first_name LIMIT :limit OFFSET :offset;
request.findByStatus=\nWHERE r.progress_status_id = :progress_status_id ORDER BY u.last_name, u.first_name LIMIT :limit OFFSET :offset;
request.findByPriority=\nWHERE r.priority_status_id = :priority_status_id ORDER BY u.last_name, u.first_name LIMIT :limit OFFSET :offset;
request.count = SELECT COUNT(1) FROM request;
request.byDate=\ WHERE date = :date;
# PRIORITY STATUS ENTITY
priorityStatus.insert=INSERT INTO priority_status (name) VALUES (:name) ON CONFLICT (id) DO UPDATE SET name = :name;
priorityStatus.delete=DELETE FROM priority_status ps WHERE ps.id = :id;
priorityStatus.exists=SELECT COUNT(*) FROM priority_status WHERE id = :id;
priorityStatus.findOne=SELECT * FROM priority_status ps WHERE ps.id = :id;
priorityStatus.findAll=SELECT * FROM priority_status ORDER BY id;
priorityStatus.findByName=SELECT * FROM priority_status ps WHERE ps.name = :priorityStatusName;
priorityStatus.count = SELECT COUNT(1) FROM priority_status;
# PROGRESS STATUS ENTITY
progressStatus.insert=INSERT INTO progress_status (name) VALUES (:name) ON CONFLICT (id) DO UPDATE SET name = :name;
progressStatus.delete=DELETE FROM progress_status ps WHERE ps.id = :id;
progressStatus.exists=SELECT COUNT(*) FROM progress_status WHERE id = :id;
progressStatus.findOne=SELECT * FROM progress_status ps WHERE ps.id = :id;
progressStatus.findAll=SELECT * FROM progress_status ORDER BY id;
progressStatus.findByName=SELECT * FROM progress_status ps WHERE ps.name = :progressStatusName;
progressStatus.count = SELECT COUNT(1) FROM progress_status;
# ROLE STATUS ENTITY
role.insert=INSERT INTO role (name) VALUES (:name) ON CONFLICT (id) DO UPDATE SET name = :name;
role.delete=DELETE FROM role r WHERE r.id = :id;
role.exists=SELECT COUNT(*) FROM role WHERE id = :id;
role.findOne=SELECT * FROM role r WHERE r.id = :id;
role.findAll=SELECT * FROM role ORDER BY id;
role.findByName=SELECT * FROM role r WHERE r.name = :roleName;
role.count = SELECT COUNT(1) FROM role;